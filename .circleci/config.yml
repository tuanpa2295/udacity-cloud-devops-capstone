version: 2.1

orbs:
  aws-eks: circleci/aws-eks@2.2.0
  kubernetes: circleci/kubernetes@1.3.1

executors:
  default:
    docker:
      - image: docker:17.05.0-ce-git

jobs:
  build:
    docker:
      - image: cimg/python:3.11.4
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
        default: "CapstoneEKS-ouGTG7ol8WdS"
      aws-region:
        description: |
          AWS region
        type: string
        default: "us-east-1"
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
          docker_layer_caching: true
      - run:
          name: Install dependencies
          command: |
            sudo apt install -y tar gzip curl
      - kubernetes/install-kubectl
      - run:
          name: Configure variable
          command: |
            echo AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID >> .env
            echo AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY >> .env
            echo DOCKER_HUB_PASSWORD=$DOCKER_HUB_PASSWORD >> .env
            echo DOCKER_HUB_USERNAME=$DOCKER_HUB_USERNAME >> .env
            cat .env
      - run:
          name: Docker login
          command: |
            docker login -u "$DOCKER_HUB_USERNAME" -p $(echo "$DOCKER_HUB_PASSWORD")
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i caches/ml-classification.tar | true
      - run:
          name: Build application Docker image
          command: docker build --cache-from=ml-classification -t ml-classification .
      - run:
          name: Save Docker image layer cache
          command: |
            chmod -R 777 ../
            mkdir -p caches
            docker save -o caches/ml-classification.tar ml-classification
      - run:
          name: Push Docker Image
          command: |
            docker tag ml-classification phamanhtuan221995/ml-classification
            docker push phamanhtuan221995/ml-classification
      - aws-eks/install-aws-iam-authenticator
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          aws-region: << parameters.aws-region >>
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          resource-file-path: ./kubernetes/deployment.yaml
          resource-name: deployment/ml-classification
          get-rollout-status: true
          show-kubectl-command: true
      - run:
          name: Test cluster
          command: |
            kubectl get nodes
            kubectl get deployment
            kubectl get pod -o wide
            kubectl get services
      - run:
          name: Cleaning up
          command: docker system prune

workflows:
  version: 2
  build-deploy:
    jobs:
      - build:
          cluster-name: CapstoneEKS-ouGTG7ol8WdS
          aws-region: $AWS_DEFAULT_REGION
          filters:
            branches:
              only:
                - master
