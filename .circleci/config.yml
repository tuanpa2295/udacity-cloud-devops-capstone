version: 2.1

executors:
  default:
    docker:
      - image: docker:17.05.0-ce-git

jobs:
  build:
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install dependencies
          command: |
            apk add --no-cache \
              py-pip=9.0.0-r1
            pip install \
              docker-compose==1.12.0 \
              awscli==1.11.76
      - run:
          name: Configure variable
          command: |
            echo AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID >> .env
            echo AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY >> .env
            echo DOCKER_HUB_PASSWORD=$DOCKER_HUB_PASSWORD >> .env
            echo DOCKER_HUB_USERNAME=$DOCKER_HUB_USERNAME >> .env
            cat .env
      - restore_cache:
          keys:
            - v1-{{ .Branch }}
          paths:
            - /caches/ml-classification.tar
      - run:
          name: Docker login
          command: |
            docker login -u "$DOCKER_HUB_USERNAME" -p $(echo "$DOCKER_HUB_PASSWORD")
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/ml-classification.tar | true
      - run:
          name: Build application Docker image
          command: docker build --cache-from=ml-classification -t ml-classification .
      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /caches
            docker save -o /caches/ml-classification.tar ml-classification
      - save_cache:
          key: v1-{{ .Branch }}-{{ epoch }}
          paths:
            - /caches/ml-classification.tar
      - run:
          name: Push Docker Image
          command: |
            docker tag ml-classification phamanhtuan221995/ml-classification
            docker push phamanhtuan221995/ml-classification
      - run:
          name: Deploying
          command: |
            echo "Deploying to AWS..."
            aws eks --region us-east-1 update-kubeconfig --name CapstoneEKS-ouGTG7ol8WdS
            kubectl config use-context arn:aws:eks:us-east-1:876162603122:cluster/CapstoneEKS-ouGTG7ol8WdS
            kubectl set image deployments/capstone-project-cloud-devops capstone-project-cloud-devops=phamanhtuan221995/ml-classification:latest
            kubectl apply -f deployment/deployment.yml
            kubectl get nodes
            kubectl get deployment
            kubectl get pod -o wide
            kubectl get service/capstone-project-cloud-devops
      - run:
          name: Cleaning up
          command: docker system prune

workflows:
  version: 2
  build-deploy:
    jobs:
      - build:
          filters:
            branches:
              only:
                - master
